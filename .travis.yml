language: python

env:
  global:
    - PKG_NAME=sequitur-g2p
    - CIBW_BUILD="cp3*win* cp27*manylinux* cp3*manylinux* cp3*mac*"
    - CIBW_BEFORE_BUILD_LINUX=travis/before-build-linux
    - CIBW_BEFORE_BUILD_WINDOWS=".\\travis\\before-build-windows"
    - CIBW_ENVIRONMENT_MACOS='CFLAGS="-std=c++11 -stdlib=libc++" CXXFLAGS="-stdlib=libc++" LDFLAGS="-stdlib=libc++"'
    - CIBW_MANYLINUX_X86_64_IMAGE=manylinux1
    - CIBW_MANYLINUX_I686_IMAGE=manylinux1
    #- CIBW_BEFORE_BUILD_MACOS=travis/before-build-macos
    #- CIBW_TEST_COMMAND="python -c \"import $PKG_NAME; import sys; sys.exit($PKG_NAME.test())\""

matrix:
  include:
    - env: 
        - TEST=TRUE
      script:
        - echo "TEST = $TEST"
        - echo "PYTHONPATH = $PYTHONPATH"
        - python setup.py install
        - make travis-test
        - python setup.py sdist
    - sudo: required
      services: docker
    # and a mac build
    - os: osx
      language: shell
      osx_image: xcode11
      compiler: clang
      before_install:
        - sudo mkdir -p /usr/local/man
        - sudo chown -R "${USER}:admin" /usr/local/man
    # and a windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
addons:
 apt_packages:
   - swig

install:
  - pip install -r requirements.txt
  - pip install -r dev-requirements.txt

script:
  # build the wheels, put them into './wheelhouse'
  - echo "TRAVIS_TAG = $TRAVIS_TAG"
  - echo "TRAVIS_PULL_REQUEST = $TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
  - |
    if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      brew update
      #brew upgrade gcc
      brew install swig
      gcc --version
    elif [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      wget -O - https://downloads.sourceforge.net/swig/swig-4.0.1.tar.gz | tar xzf -
    elif [ "${TRAVIS_OS_NAME}" == "windows" ]; then
      choco install swig
    fi
  - python -m cibuildwheel --output-dir wheelhouse

after_success:
  # if the release was tagged, upload them to PyPI
  - |
    python3 setup.py sdist
    if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then 
      TWINE_NON_INTERACTIVE=1 python -m twine upload --skip-existing \
        --verbose -p $PYPITEST_PASSWORD -u __token__  \
        --repository-url https://test.pypi.org/legacy/  wheelhouse/*whl
      TWINE_NON_INTERACTIVE=1 python -m twine upload --skip-existing \
        --verbose -p $PYPITEST_PASSWORD -u __token__  \
        --repository-url https://test.pypi.org/legacy/  wheelhouse/*tar.gz
    elif [[ $TRAVIS_TAG ]]; then 
      TWINE_NON_INTERACTIVE=1 python -m twine upload --skip-existing \
        --verbose -p $TWINE_PASSWORD -u __token__  wheelhouse/*whl
      TWINE_NON_INTERACTIVE=1 python -m twine upload --skip-existing \
        --verbose -p $TWINE_PASSWORD -u __token__  wheelhouse/*tar.gz
    fi
  - echo "All done"
